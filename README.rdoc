== README

This application is built for a coding challenge that focuses on the backend.  It demonstrates the use of REST conventions through three different resources : talk, attendee and attendance to talk.  
What you will see when you open this app is a simplistic design that allows for movement between the resources, there is minimal effort placed on UX due to time constrains.  

the stack 
Ruby on Rails - selected due to ease of getting up and running under tight time deadlines, and no other technology was suggested for this challenge

database:
postgres - workes seamlessly with rails

Resources : (attributes were determined based on the JSON information provieded)
	-Talk: this is the resources that keeps track of the events that the attendees can attend.
		- attributes include Title, Host, Date and Description

	-Attendees: the individuals that will attend, or users of the site
		- attributes include First Name, Last Name, Passion

	-Attendance: the joint table that connects attendees to talks
		- attributes include talk_id, attendee_id


Features
The front page shows a table of all the current talks, the talk's information, and a count of how many attendees there are signed up for the talk based on the joint table attendance.

Attendance is created at the same time Attendee is created.  In order to not have to deal with sessions and cookies, given the scope of this challenge I opted to create froms that could grab the id's from one record that is created and use that id to create another record at the same time.  This ment using drop down menues and an additional function on the controller called "create_attend".  The way this works is when attendee is saved after the submit, an if statement is triggered and create_attend is called and passed the id from the attendee that was just created and the talk.id that was used in the form.  

 
